Join lines

awk 'BEGIN{RS="\0"}{gsub(/\n/,"<SOMETEXT>");print}' file.txt

$ echo -e "asdf\n\n\nqwerty\nasdf\n" | awk 'BEGIN{RS="\0"}{gsub(/\n/,"<SOMETEXT>");print}'
asdf<SOMETEXT>qwerty<SOMETEXT>asdf<SOMETEXT>

awk version of 7210. Slightly longer, but expanding it to catch blank
lines is easier:

awk 'BEGIN{RS="\0"}{gsub(/\n+/,"<SOMETEXT>");print}' file.txt

Alternatives

There are 5 alternatives - vote for the best!

Terminal - Alternatives
cat file | tr "\n" " "

It's works only when you replace '\n' to ONE character.

tr "\n" " " < file

Even shorter. Stolen from comment posted by eightmillion.

perl -pe 'eof()||s/\n/<SOMETEXT>/g' file.txt

$ cat file.txt
line one
line two
line three
line four
line five
$  perl -pe 'eof()||s/\n/, /g' file.txt
line one, line two, line three, line four, line five

This command turns a multi-line file into a single line joined with
<SOMETEXT>. To skip blank lines, use:

perl -pe '(eof()||s/^\s*$//)||s/\n/<SOMETEXT>/g' file.txt
cat file | tr -d "\n"

This command deletes the "newline" chars, so its output maybe unusable :)

echo -e "aa\nbb\ncc\ndd\n123" | sed -e :a -e "/$/N; s/\n/;/; ta"
