Use tee to process a pipe with two or more processes

Terminal - Use tee to process a pipe with two or more processes
echo "tee can split a pipe in two"|tee >(rev) >(tr ' ' '_')

 tee can split a pipe in two
 tee_can_split_a_pipe_in_two
 owt ni epip a tilps nac eet

User: axelabs
Use tee to process a pipe with two or more processes

Tee can be used to split a pipe into multiple streams for one or more
process to work it. You can add more " >()" for even more fun.




tee >(cat - >&2)

 $ bash --version |tee  >(cat - >&2) | wc -l
 GNU bash, version 3.2.49(1)-release (i586-suse-linux-gnu)
 Copyright (C) 2007 Free Software Foundation, Inc.
 2

User: camocrazed
tee to a file descriptor

the tee command does fine with file names, but not so much with file
descriptors, such as &2 (stderr). This uses process redirection to tee to
the specified descriptor.

In the sample output, it's being used to tee to stderr, which is connected
with the terminal, and to wc -l, which is also outputting to the terminal.
The result is the output of bash --version followed by the linecount


Cool trick!

Unfortunately Cygwin has a bug in 1.7 that prevents this from working. AIX
also has problems with it - it runs once but hangs after that. I thought
it was leaving pipes around but it still hangs if I delete them from /tmp.
Any help is much appreciated.

Comment by randy909 8 weeks and 1 day ago

