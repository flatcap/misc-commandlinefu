Changing the terminal title to the last shell command

Terminal - Changing the terminal title to the last shell command
trap 'echo -e "\e]0;$BASH_COMMAND\007"' DEBUG

User: Vereb
Changing the terminal title to the last shell command

You can set the previous bash command as the terminal title by this
command.

Explanation:

-trap assigns a command to execute at a given bash signal.

-in the $BASH_COMMAND you find the last command

-you can set the terminal title with the escape sequence: \e]0;this is the
title\007

-to let the echo care about the backslashes give the -e to it

Since trap is a built in bash command you find more informatin in 'man
bash'for more

Source: http://www.davidpashley.com/articles/xterm-titles-with-bash.html



if [ "$SHELL" = '/bin/zsh' ]; then case $TERM in rxvt|*term|linux) preexec
() { print -Pn "\e]0;$1\a" };; esac; fi

User: Patola
Changing the terminal title to the last shell command

Found the same command for zsh in
http://www.davidpashley.com/articles/xterm-titles-with-bash.html - changed
it a bit so that the behaviour is the same

[[ "x$TERM" == "xrxvt" || "x$XTERM_VERSION" == xXTerm* || "x$COLORTERM" ==
'gnome-terminal' && "x$SHELL" == */bin/zsh ]] && preexec () { print -Pn
"\e]0;$1\a" }

User: Patola
Changing the terminal title to the last shell command

Found another way, more compatible. Tested with xterm, aterm,
gnome-terminal and rxvt (where it sets the window title) and guake (where
it doesn't - after all, guake does not show the window title).


Holy crap, that's nice!

I've got plenty of aliases that wrap lengthy commands and give me feedback
in the titlebar. Your trap combined with a PROMPT_COMMAND opens up a whole
new world!

Thanks.

Comment by flatcap 54 weeks ago

Doesn't seems to work when sending process in background using "&"

Comment by eastwind 54 weeks ago

I don't have a problem with background tasks -- they show up as expected.
However, I do see an unnecessary newline after every command. Try changing
the command to use:

echo -ne
Comment by flatcap 54 weeks ago

Just for fairness, I found the similar trick in zsh:

http://www.davidpashley.com/articles/xterm-titles-with-bash.html

Although for the behaviour to be really identical, I'd change the code
from the above URL to:

# Last command on window title:

if [ "$SHELL" = '/bin/zsh' ]

then

case $TERM in

rxvt|*term|linux)

preexec () { print -Pn "\e]0;$1\a" }

;;

esac

fi

Comment by Patola 53 weeks and 2 days ago

Yes, you are right, i found it there. I didn't want to be unfair.

I started to collect these useful scripts here. I should have mention the
source, sorry!

Comment by Vereb 53 weeks and 1 day ago

