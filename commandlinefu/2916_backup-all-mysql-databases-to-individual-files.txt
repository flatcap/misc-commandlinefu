Backup all MySQL Databases to individual files

Terminal - Backup all MySQL Databases to individual files
for I in $(mysql -e 'show databases' -s --skip-column-names); do mysqldump
$I | gzip > "$I.sql.gz"; done

User: lingo
Backup all MySQL Databases to individual files



for db in $(mysql -e 'show databases' -s --skip-column-names); do
mysqldump $db | gzip > "/backups/mysqldump-$(hostname)-$db-$(date
+%Y-%m-%d-%H.%M.%S).gz"; done

User: syssyphus
Backup all MySQL Databases to individual files
for I in `echo "show databases;" | mysql | grep -v Database`; do mysqldump
$I > "$I.sql"; done

User: ruedu
Backup all MySQL Databases to individual files

Backups all MySQL databases to individual files. Can be put into a script
that grabs current date so you have per day backups.

mysql -e 'show databases' | sed -n '2,$p' | xargs -I DB 'mysqldump DB >
DB.sql'

User: mislav
Backup all MySQL Databases to individual files

No need to loop when we have `xargs`. The sed command filters out the
first line of `show databases` output, which is always "Database".


Typo: for I in $(mysql -e 'show databases' -s --skip-column-names); do
mysqldump $I | gzip > $I.sql.gz"; done

quote marks not opened. should read:

for I in $(mysql -e 'show databases' -s --skip-column-names); do mysqldump
$I | gzip > "$I.sql.gz"; done

Comment by sublimino 56 weeks and 6 days ago

