Make sure a script is run in a terminal.

Terminal - Make sure a script is run in a terminal.
[ -t 0 ] || exit 1

User: cfajohnson
Make sure a script is run in a terminal.

Exit with error if script is not run in a terminal



isatty(){ test -t $1; }

User: bhepple
Is it a terminal?

Oddly, the isatty(3) glibc C call doesn't have a direct analogue as a
command 'isatty(1)'. All is not lost as you can use test(1).

For example, your script might be run from a tty or from a GUI menu item
but it needs to get user-input or give feedback. Now your script can test
STDIN with 'isatty 0' or STDOUT with 'isatty 1' and use xmessage(1) if the
tty is not available.

The other way to test for this is with 'tty -s' - but that's only for
STDIN.

tty > /dev/null 2>&1 || { aplay error.wav ; exit 1 ;}

User: johnraff
Make sure a script is run in a terminal.

If your script needs to be run in a terminal, this line at the top will
stop it running if you absent-mindedly double-click the icon, perhaps
intending to edit it. (Of course this won't help with scripts that run in
the background.)


Very nice. You ought to explain how it works, though.

Comment by flatcap 46 weeks and 4 days ago

man test

Comment by cfajohnson 46 weeks and 4 days ago

Even when you're not on a TTY, one should still write to stderr before
dying. Some interactive sessions don't show up as TTYs and it'd be best if
your script didn't fail silently.

Comment by hackerb9 46 weeks and 2 days ago

