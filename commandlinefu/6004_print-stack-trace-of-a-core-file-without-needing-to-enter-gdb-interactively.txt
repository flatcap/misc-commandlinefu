Print stack trace of a core file without needing to enter gdb interactively

Terminal - Print stack trace of a core file without needing to enter gdb
interactively
gdb --batch --quiet -ex "thread apply all bt full" -ex "quit" ${exe}
${corefile}

User: Flameeyes
Print stack trace of a core file without needing to enter gdb
interactively

This does almost the same thing as the original, but it runs the full
backtrace for _all_ the threads, which is pretty important when reporting
a crash for a multithreaded software, since more often than not, the
signal handler is executed in a different thread than the crash happened.



alias gdbbt="gdb -q -n -ex bt -batch"

User: TeacherTiger
Print stack trace of a core file without needing to enter gdb
interactively

The pstack command prints a stack trace of running processes without
needing to attach a debugger, but what about core files? The answer, of
course, is to use this command. Usage: gdbbt program corefile


