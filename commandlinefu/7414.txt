rename files according to file with colums of corresponding names

xargs -n 2 mv < file_with_colums_of_names

Maybe simpler, but again, don't know how it will work with space in
filename.

Alternatives

Terminal - Alternatives
awk '{ movecmd = "mv " $1 " " $2 ; system(movecmd) }'
file_with_colums_of_names

text file has to have at least two colums, where the first one contains
the actual filenames of the files to rename, the second one the names you
want the corresponding file to be renamed to, e.g.:

00b7ee34-a8a2-421e-9294-c34d9501a2da_opencast_video_itunes-wcb.mp4
lecture_01.mp4

029273fb-3cd4-40ca-9b3c-9df099997976_opencast_video_itunes-wcb.mp4
lecture_02.mp4

etc.

What others think

Assuming you're separating source and destination names by tab characters,
try this to avoid issues with spaces and such:

tr "\t\n" "\0" <file_with_columns_of_names | xargs --null -n 2 mv

But it will build something like that :

mv my first filename my second filename

Maybe with -i and mv "{}" "{}" but i don't know enough xargs to be sure

And if someone know how to deal with that, because it often cause me
trouble for something like that :

for file in *.xls ; do ...

( yes, xls, because only windows user will put space in filename and yes
i'm trolling a little)

Because it will run badly with space. And i have never find a way to tell
him to quote filename (it always end running with "my,first,filename").
