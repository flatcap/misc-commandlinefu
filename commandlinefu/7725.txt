Remove all the files except abc in the directory

rm *[!teste0,teste1,teste2]

$ ls
teste0  teste1  teste2  teste3  teste4  teste5  teste6  teste7  teste8  teste9
$ rm *[!teste0,teste1,teste2]
$ ls
teste0  teste1

Remove all arquives except the list.

Can't have space between the commas.

Alternatives

There are 15 alternatives - vote for the best!

Terminal - Alternatives
rm !(*.foo|*.bar|*.baz)

Example: rm !(*.tex|*.pdf) deletes all except the tex and pdf files.

Deletes all files in a folder that are NOT *.foo, *.bar or *.baz files.
Edit the pattern inside the brackets as you like.

rm -f !(survivior.txt)
find . ! -name <FILENAME> -delete

it will remove everything except the file names matching you can use also
use wildcards

( shopt -s extglob; rm !(<PATTERN>) )

Remove everything except that file with shell tricks inside a subshell to
avoid changes in the environment.

help shopt
rm !(file_to_keep_undeleted)

Go to tmp :

cd /tmp; mkdir retmp; cd retmp

Create 10 files :

for i in {1..10}; do touch test$i; done

Remove all files except test10 :

rm !(test10)

What others think

Wrong. Take a look:

rany:~/Desktop$ ls

rany:~/Desktop$ >test0 >test1 >test2 >footest0 >footest1

rany:~/Desktop$ rm *[!test0,test1]

rany:~/Desktop$ ls

footest0 footest1 test0 test1

rany:~/Desktop$

That is a wrong glob to use.

Use !(test0|test1|test2) instead.
